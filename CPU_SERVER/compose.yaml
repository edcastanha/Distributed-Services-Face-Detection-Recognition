version: '3.8'

services:

# RabbitMQ - Secedu Broker
  broker-server:
    image: rabbitmq:3-management
    container_name: broker-server
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=secedu
      - RABBITMQ_DEFAULT_PASS=ep4X1!br
    volumes:
      - B:\workspace\volumes\rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "25676:25676"
    networks:
      - server-hosts

# REDIS - Secedu Face Recognition Key-Value Database
  redis-server:
    image: redis/redis-stack:latest
    container_name: redis-server
    volumes:
      - B:\workspace\volumes\redis:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - server-hosts

# Postgres - Secedu System Database 
  postgres-server:
    image: postgres
    container_name: postgres-server
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    user: postgres
    secrets:
      - db-password
    environment:
      - POSTGRES_DB=secedu
    volumes:
      - 'B:\workspace\volumes\postgres:/var/lib/postgresql/data'
    ports:
      - 5432:5432
    networks:
      - server-hosts
      
# Django - Secedu System Admin / API REST 
  secedu-api:
    build:
      context: ../secedu-django-api/
      dockerfile: Dockerfile
    container_name: secedu-api
    command: gunicorn core.wsgi:application --bind 0.0.0.0:7000 --workers 2
    depends_on:
      - postgres-server
      - redis-server
      - broker-server
    environment:
      - PGDATABASE=secedu
      - PGUSER=secedu
      - PGPASSWORD=ep4X1!br
      - PGHOST=postgres-server
      - PGPORT=5432
      - MYSECRET=78cdsvc7sdavb07nvar87ynbdravs7by87yvb7ab09se7vybrsd7vyd9
      - MYDEBUG=False
      - ALLOWED_HOSTS=sippeserver01.ddns.net,localhost,
      - FPT_PATH=/usr/src/api/ftp/
      - DATASET_PATH=/usr/src/api/dataset/
      - REDIS_URL=redis://redis-server:6379/0
      - RBMQ_HOST=broker-server
      - RBMQ_PORT=5672
      - RBMQ_USER=secedu
      - RBMQ_PASS=ep4X1!br
      - BROKER_URL=amqp://secedu:ep4X1!br@broker-server:5672
    restart: always
    volumes:
      - ../secedu-django-api/:/api/
      - B:\workspace\volumes\dataset:/usr/src/api/dataset/
      - B:\SIPPE\FTP:/usr/src/api/ftp/
    ports:
      - "7000:7000"
    networks:
      - server-hosts

# Celery - Secedu System Task Manager
  secedu-beat-scheduler:
    build:
      context: ../secedu-django-api/
      dockerfile: Dockerfile
    command: /bin/sh /api/beat-scheduler.sh
    depends_on:
      - postgres-server
      - redis-server
      - broker-server
    restart: always
    environment:
      - PGDATABASE=secedu
      - PGUSER=secedu
      - PGPASSWORD=ep4X1!br
      - PGHOST=postgres-server
      - PGPORT=5432
      - MYSECRET=78cdsvc7sdavb07nvar87ynbdravs7by87yvb7ab09se7vybrsd7vyd9
      - MYDEBUG=False
      - ALLOWED_HOSTS=sippeserver01.ddns.net,localhost,
      - FPT_PATH=/usr/src/api/ftp/
      - DATASET_PATH=/usr/src/api/dataset/
      - REDIS_URL=redis://redis-server:6379/0
      - RBMQ_HOST=broker-server
      - RBMQ_PORT=5672
      - RBMQ_USER=secedu
      - RBMQ_PASS=ep4X1!br
      - BROKER_URL=amqp://secedu:ep4X1!br@broker-server:5672
    volumes:
      - ../secedu-django-api/:/api/
      - B:\workspace\volumes\dataset:/usr/src/api/dataset/
      - B:\SIPPE\FTP:/usr/src/api/ftp/
    networks:
      - server-hosts

# Celery - SecEdu System Task Worker
  secedu-tasks-workers:
    build:
      context: ../secedu-django-api/
      dockerfile: Dockerfile
    command: /bin/sh /api/tasks-workers.sh
    depends_on:
      - postgres-server
      - redis-server
      - broker-server
    restart: always
    environment:
      - PGDATABASE=secedu
      - PGUSER=secedu
      - PGPASSWORD=ep4X1!br
      - PGHOST=postgres-server
      - PGPORT=5432
      - MYSECRET=78cdsvc7sdavb07nvar87ynbdravs7by87yvb7ab09se7vybrsd7vyd9
      - MYDEBUG=False
      - ALLOWED_HOSTS=sippeserver01.ddns.net,localhost,
      - FPT_PATH=/usr/src/api/ftp/
      - DATASET_PATH=/usr/src/api/dataset/
      - REDIS_URL=redis://redis-server:6379/0
      - RBMQ_HOST=broker-server
      - RBMQ_PORT=5672
      - RBMQ_USER=secedu
      - RBMQ_PASS=ep4X1!br
      - BROKER_URL=amqp://secedu:ep4X1!br@broker-server:5672
    volumes:
      - ../secedu-django-api/:/api/
      - B:\workspace\volumes\dataset:/usr/src/api/dataset/
      - B:\SIPPE\FTP:/usr/src/api/ftp/
    networks:
      - server-hosts

# Flask - API FACE RECOGNITION 
  secedu-face:
    image: apiv1sippe:tf-deepface-1.0.0
    #command: python -c "import tensorflow as tf;tf.test.gpu_device_name()"
    #build:
    #  context: ../secedu-flask-deepface/
    #  dockerfile: Dockerfile
    container_name: secedu-face
    environment:
      - FPT_PATH = /usr/src/app/ftp/
      - DATASET_PATH = /usr/src/app/dataset/
    volumes:
      - ../secedu-flask-deepface/app/api/:/app/
      - B:\workspace\volumes\dataset:/usr/src/app/dataset/
      - B:\workspace\volumes\capturas:/usr/src/app/capturas/
      - B:\SIPPE\FTP:/usr/src/app/ftp/
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "5000:5000"
    networks:
      - server-hosts

networks:
  server-hosts:
    driver: bridge

secrets:
  db-password:
    file: ../password.txt